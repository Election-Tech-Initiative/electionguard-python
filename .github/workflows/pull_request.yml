name: Validate Pull Request

on: [pull_request, repository_dispatch]

env:
  PYTHON_VERSION: 3.8

jobs:
  code_analysis: 
    name: Code Analysis
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Setup Environment
        run: make environment
      - name: Lint
        run: make lint
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  linux_check:
    name: Linux Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Setup Environment
        run: make environment
      - name: Install Module
        run: make install validate
      - name: Full Test & Coverage
        run: make coverage
      - name: Generate Sample Data
        # TODO: Issue #152
        run: make generate-sample-data SAMPLE_BALLOT_SPOIL_RATE=0

  mac_check:
    name: MacOS Check
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Setup Environment
        run: make environment
      - name: Install Module
        run: make install validate
      - name: Integration Tests
        run: make test-integration

  windows_check:
    name: Windows Check
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Pip Upgrade
        run: python -m pip install -U pip
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Setup Environment
        run: make environment
      - name: Install Module
        run: make install validate
      - name: Integration Tests
        run: make test-integration
